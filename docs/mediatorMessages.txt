/***

This text describes the messages that the mediator is supposed to interpret.
It isn't need to let the program work but it is recommended to document all messages here.

There are order commands and event commands, 
order comments starts with a present verb, it is send to let the event occur
event comments ends with a past verb, they should ALWAYS be sent when the event is over

***/

/****** Internal messages ********/

/**
 * EventKey: InterfaceResourceCreated
 * Sent when a interface resource is created
 *
 * @param {InterfaceResource} interfaceResource - The object that contains the data from an interface resource.
 */
 
 /**
 * EventKey: CreateButton
 * Order to create a button
 *
 */

 /**
 * EventKey: RenameElement
 * Order to rename an element
 *
 * @param {InterfaceResource} interfaceResource - The object that contains the data from an interface resource.
 * @param {String} newNameStr - The new name's String
 */

/**
 * EventKey: Redo
 * Order to undo an action
 *
 */
 
 /**
 * EventKey: Undo
 * Order to undo an action
 *
 */

/**
 * EventKey: ProjectCreated
 * Sent when a project is created 
 *
 * @param {String} projectName - New project's name
 * @param {String} authorName - New project's author
 * @param {Sketch} sketchProject - New project's object
 */
 
 /**
 * EventKey: ProjectClosed
 * Sent when a project is closed 
 *
 */
 
 /**
 * EventKey: SaveProject
 * Sent when a project is saved 
 *
 */

/****** Graphic messages ********/


/**
 * EventKey: EditorDragEnd
 * Sent when a interface resource on the canvas drag is finished 
 *
 * @param {?} evt - The event that has been published
 * @param {InterfaceResource} interfaceResource - The data object from the shape which has been dragged
 * @param {Kinetic.Node} kineticShape - The kinetic node on the canvas that has been dragged
 */
 
 /**
 * EventKey: ResourceClicked
 * Sent when a interface resource on the canvas is clicked
 *
 * @param {?} evt - The event that has been published
 * @param {InterfaceResource} interfaceResource - The data object from the shape which has been clicked
 */
 
 /**
 * EventKey: ResourceNameChanged
 * Sent when a interface resource name's changed
 *
 * @param {InterfaceResource} interfaceResource - The data object from the shape which has been clicked
 * @param {String} newNameStr - The new name's String
 */